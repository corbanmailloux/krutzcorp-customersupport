server { # Redirect vm URL to support.krutz.site
    listen 80;
    listen 443 ssl;

    server_name vm343f.se.rit.edu;
    return 301 https://support.krutz.site$request_uri; # Force directly to HTTPS
}

server {
    listen 80 default_server;
    listen 443 ssl default_server;

    server_name support.krutz.site;

    if ($scheme = http) { # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    location / {
        include uwsgi_params;
        uwsgi_pass unix:/var/www/krutzcorp-customersupport/krutzcorp-customersupport.sock;
    }

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/support.krutz.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/support.krutz.site/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    # Generate this with: openssl dhparam -out dhparams_4096.pem 4096
    ssl_dhparam /etc/nginx/ssl/dhparams_4096.pem;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
}
